@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Mappings

@{
    ViewData["Title"] = "Mappings";
}
<table class="table">
    <thead>
    <tr>
        <th id="guid">
            <a asp-route-id="@Model.ServiceId" asp-route-sortOrder="@Model.GuidSort">
                @Html.DisplayNameFor(model => model!.Maps![0].Guid)
            </a>
        </th>
        <th id="title">
            <a asp-route-id="@Model.ServiceId" asp-route-sortOrder="@Model.TitleSort">
                @Html.DisplayNameFor(model => model!.Maps![0].Title)
            </a>
        </th>
        <th id="date">
            <a asp-route-id="@Model.ServiceId" asp-route-sortOrder="@Model.DateSort">
                @Html.DisplayNameFor(model => model!.Maps![0].UpdatedAt)
            </a>
        </th>
        <th class="align-items-end" id="manage">
            Manage
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var map in Model!.Maps!)
    {
        <tr>
            <th scope="row">@map.Guid</th>
            <td> @map.Title </td>
            <td> @map.UpdatedAt.ToString("dd.MM.yyyy HH:mm:ss") </td>
            <td>
                <div class="d-flex justify-content-end">
                    <button class="btn btn-primary me-2"
                            data-bs-toggle="collapse"
                            data-bs-target="#details-@map.Guid">
                        Details and Edit
                    </button>
                    <form method="post" asp-page-handler="ResetMapping">
                        <input type="hidden" asp-for="@Request.Query["id"]" name="id"/>
                        <input type="hidden" asp-for="@map.Guid" name="guid"/>
                        <button type="submit" class="btn btn-danger">X</button>
                    </form>
                </div>
            </td>
        </tr>
        <tr id="details-@map.Guid" class="collapse">
            <td colspan="4">
                <form id="UpdateMappingForm" method="post" asp-page-handler="SaveAndUpdate">
                    <div class="form-floating">
                        <textarea id="rawMap" asp-for="@map.Raw" class="form-control" style="height: 300px; white-space: pre-line" name="raw"></textarea>
                    </div>
                    <p>
                    <div class="d-flex flex-row-reverse">
                        <input type="hidden" asp-for=@Model.Request.Query["serviceId"] name="serviceId"/>
                        <input type="hidden" asp-for="@map.Guid" name="guid"/>
                        <input type="hidden" asp-for="MapJsonContent" id="json-content"/>
                        <button id="save-button" type="submit" class="btn btn-warning">Save and Update</button>
                    </div>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Maps.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Maps.HasNextPage ? "disabled" : "";
}
<div class="d-flex justify-content-between">
    <div>
        <a asp-route-id="@Model.ServiceId"
           asp-route-sortOrder="@Model.DateSort"
           asp-route-pageIndex="@(Model.Maps.Page - 1)"
           class="btn btn-primary @prevDisabled">
            Previous
        </a>
        <a asp-route-id="@Model.ServiceId"
           asp-route-sortOrder="@Model.DateSort"
           asp-route-pageIndex="@(Model.Maps.Page + 1)"
           class="btn btn-primary @nextDisabled">
            Next
        </a>
    </div>
    
    <div class="d-flex flex-row-reverse">
        <form method="post" asp-page-handler="ResetAllMappings">
            <input type="hidden" asp-for="@Model.Request.Query["id"]" name="id"/>
            <button type="submit" class="btn btn-danger">Reset All Mappings</button>
        </form>
    </div>
</div>
<br/>
<div>
    <a asp-page="../Index">Back to Service List</a>
</div>

<script>
    function isValidJson(json) {
        try {
            JSON.parse(json);
            return [true, "isValid"];
        } catch (e) {
            return [false, e];
        }
    }
    $(document).ready(function(){
        $( "#UpdateMappingForm" ).submit(function( event ) {
            let jsonInput = $("#rawMap").val();
            let isValid = isValidJson(jsonInput);
            if (!isValid[0]) {
                event.preventDefault();
                showErrorModal(isValid[1].message);
            }
        });
    });
    function showErrorModal(errorMessage) {
        $('#errorModal .modal-body').text(errorMessage);
        $('#errorModal').modal('show');
    }
</script>